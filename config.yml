SLICE_INTV: 2  # slice interval in mm after interpolation. If 0, only use one slice thus no 3D context
NUM_SLICES: 3  # multi-slice input (data-level fusion in 3DCE paper) to incorporate 3D context
RCNN_FEAT_STRIDE: 8
RPN_FEAT_STRIDE: 8
ANCHOR_SCALES: [2, 3, 4, 6, 12]
FIXED_PARAMS: []  # freeze the weights such as ['conv1','conv2'], will be faster, but less accurate
NORM_SPACING: .8  # first normalize image size to NORM_SPACING mm/pixel (so the smaller this value, the larger the image).
MAX_SIZE: 512  # then restrict the maximum image size to MAX_SIZE
IMG_DO_CLIP: True  # clip the black borders of CT images
CLASS_NAMES: ['bg', 'lesion']
FRAMEWORK: '3DCE'  # alternatives: 'Faster'(Faster RCNN), 'RFCN', '3DCE'
NUM_IMAGES_3DCE: 1  # if FRAMEWORK != 3DCE, NUM_IMAGES_3DCE must be 1;
  # if FRAMEWORK == 3DCE, NUM_IMAGES_3DCE is the number of 3-channel images to combine (symbol M in the paper), can be 1,3,5,7,9,...
  # if FRAMEWORK == 3DCE and NUM_IMAGES_3DCE == 1, it is equivalent to use the "Improved RFCN" in the 3DCE paper
TRAIN:
  SAMPLES_PER_BATCH: 2  # #samples (including multiple slices per image and multiple images per sample in 3DCE) per batch
  RPN_BATCH_SIZE: 32
  BATCH_ROIS: 32  # RCNN
  RPN_REG_LOSS_WEIGHT: 1
  RCNN_REG_LOSS_WEIGHT: 10
  FG_FRACTION: 0.25
  RCNN_POS_UPSAMPLE: False  # whether or not upsample the number of foregrounds in each batch
  RPN_MIN_SIZE: 8
  CXX_PROPOSAL: False  # use c++ implementation of proposal layer, faster, but only supports 1 image per batch
  BBOX_NORMALIZE_TARGETS: False
  BBOX_NORMALIZATION_PRECOMPUTED: True
TEST:
  RPN_MIN_SIZE: 8
  CXX_PROPOSAL: False  # use c++ implementation of proposal layer, not applicable for 3DCE
